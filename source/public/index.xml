<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Victor Liu&#39;s Math Notes</title>
    <link>http://localhost:1313/math-notes/</link>
    <description>Recent content on Victor Liu&#39;s Math Notes</description>
    <generator>Hugo -- 0.133.0</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Aug 2024 12:00:00 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/math-notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About Me</title>
      <link>http://localhost:1313/math-notes/about-me/</link>
      <pubDate>Tue, 20 Aug 2024 12:00:00 -0400</pubDate>
      <guid>http://localhost:1313/math-notes/about-me/</guid>
      <description>About Me High school student! I like mathematics </description>
    </item>
    <item>
      <title>Portfolio</title>
      <link>http://localhost:1313/math-notes/portfolio/</link>
      <pubDate>Tue, 20 Aug 2024 12:00:00 -0400</pubDate>
      <guid>http://localhost:1313/math-notes/portfolio/</guid>
      <description>Portfolio Timer Project Check out my timer project here. It&amp;rsquo;s a simple timer built with HTML and JavaScript.</description>
    </item>
    <item>
      <title>CLT and diffusion models</title>
      <link>http://localhost:1313/math-notes/posts/clt-and-diffusion-models/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/math-notes/posts/clt-and-diffusion-models/</guid>
      <description>Connections between the Central Limit Theorem (CLT) and the reverse process of diffusion models being able to initialize from normal (Gaussian) distributions.</description>
    </item>
    <item>
      <title>Encoder-decoder vs decoder only transformer models</title>
      <link>http://localhost:1313/math-notes/posts/encoder-decoder-vs-decoder-only/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/math-notes/posts/encoder-decoder-vs-decoder-only/</guid>
      <description>Encoder-decoder vs decoder only transformer models Modern state-of-the-art Transformer models are based on the decoder-only architecture. However, I was initially confused by the name &amp;ldquo;encoder&amp;rdquo;, which to me alludes to encoding the words into numbers. This is actually the role of the embedding layer.
So, what are the differences between an encoder-deconder and decoder-only transformer model?
High-level comparison Aspect Encoder-Decoder Transformers Decoder-Only Models Architecture Separate encoder and decoder Single stack of decoder layers Components Encoder, Decoder Decoder only Input Processing Encoder processes entire input at once Sequential, one token at a time Typical Use Cases Translation, Summarization, Q&amp;amp;A Text generation, Autocomplete, Conversational AI Attention Mechanism Self-attention + Cross-attention Self-attention with causal masking Parallelization Encoder: ParallelDecoder: Sequential Inherently sequential Directionality Encoder: BidirectionalDecoder: Unidirectional Unidirectional Training Objective Sequence-to-sequence tasks Next-token prediction Model Size Generally larger Often more compact Flexibility Better for distinct input/output sequences Simpler for open-ended generation Examples BERT+GPT hybrid, T5, BART GPT series, BLOOM, LLaMA The main difference is that encoder-decoder models distinguish the input processed by the encoder and the tokens generated by the decoder, whereas in decoder-only models, there is no distinction between input and output tokens; they are treated as the same type of tokens to predict the next token.</description>
    </item>
    <item>
      <title>Overview of transformers</title>
      <link>http://localhost:1313/math-notes/posts/overview-of-transformers/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/math-notes/posts/overview-of-transformers/</guid>
      <description>High-level explanation of transformers, how they work (no math), and the history leading up to them.</description>
    </item>
    <item>
      <title>Separating positional encoding and semantic information</title>
      <link>http://localhost:1313/math-notes/posts/separating-positional-encoding-and-semantic-information/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/math-notes/posts/separating-positional-encoding-and-semantic-information/</guid>
      <description>How does the model manage to separate the 2 parts of positional encoding?</description>
    </item>
    <item>
      <title>The Lottery Ticket Hypothesis</title>
      <link>http://localhost:1313/math-notes/posts/lottery-ticket-hypothesis/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/math-notes/posts/lottery-ticket-hypothesis/</guid>
      <description>Visual intuition for the Lottery Ticket Hypothesis.</description>
    </item>
    <item>
      <title>Unbiased sample variance</title>
      <link>http://localhost:1313/math-notes/posts/unbiased-sample-variance/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/math-notes/posts/unbiased-sample-variance/</guid>
      <description>Dividing sample variance by one less than the sample size So I was looking at the statistics course on Khan Academy, and he said that the sample variance is &amp;ldquo;biased&amp;rdquo; if we directly divide by the sample size, in the sense that it underestimates the true population variance. To compensate, we divide by one less than the sample size. I asked ChatGPT for more detailed explanations, and here is an algebraic derivation of the biased sample variance estimator using expected value.</description>
    </item>
  </channel>
</rss>
